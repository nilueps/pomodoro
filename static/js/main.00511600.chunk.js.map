{"version":3,"sources":["bell.ogg","deepbell.ogg","helpers.js","components/Stats.js","components/Timer.js","components/Settings.js","components/Incrementer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","zeroPad","int","toString","getHumanTime","time","hours","minutes","seconds","format","Date","getHours","getMinutes","getSeconds","Math","floor","result","includes","push","twelveHour","indexOf","i","length","join","millisecs","m","Stats","timeBlock","this","props","sessionLength","breakLength","fullBlocksLeft","max","blocks","reduce","a","c","totalTimeLeft","timeLeft","status","className","now","sessionsCompleted","timeElapsed","PureComponent","Timer","lastMinute","isRunning","label","toUpperCase","slice","blockDots","map","v","key","icon","fasCircle","farCircle","id","Settings","onClick","callback","faPause","faPlay","faUndoAlt","Incrementer","idLabel","idValue","labelText","e","value","React","INITIAL_STATE","App","changeSettings","state","currentTarget","min","unshift","shift","setState","playPauseReset","bind","timerID","setInterval","tic","clearInterval","bell","currentTime","play","beep","src","type","ref","audio","deepBell","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","href","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.00511600.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bell.45dd5ea1.ogg\";","module.exports = __webpack_public_path__ + \"static/media/deepbell.204def96.ogg\";","function zeroPad(int) {\n  return int > 9 ? int.toString() : '0' + int\n}\nexport function getHumanTime(time, format = 'hms:a') {\n  let hours, minutes, seconds\n  if (time instanceof Date) {\n    hours = time.getHours()\n    minutes = zeroPad(time.getMinutes())\n    seconds = zeroPad(time.getSeconds())\n  } else {\n    hours = Math.floor(time / 1000 / 60 / 60).toString()\n    minutes = zeroPad(Math.floor((time / 1000 / 60) % 60))\n    seconds = zeroPad(Math.floor((time / 1000) % 60))\n  }\n  let result = []\n  //hours = 12\n\n  if (format.includes('h')) result.push(hours)\n  if (format.includes('m')) result.push(minutes)\n  if (format.includes('s')) result.push(seconds)\n  if (format.includes('a')) {\n    let twelveHour = hours % 12\n    result[result.indexOf(hours)] = twelveHour === 0 ? 12 : twelveHour\n    for (let i = 0; i < result.length - 1; i++) {\n      result[i] += ':'\n    }\n    hours < 13 ? result.push(' AM') : result.push(' PM')\n  } else if (format.includes(':')) {\n    for (let i = 0; i < result.length - 1; i++) {\n      result[i] += ':'\n    }\n  } else {\n    result[result.indexOf(hours)] += 'h'\n    result[result.indexOf(minutes)] += 'm'\n    result[result.indexOf(seconds)] += 's'\n  }\n  return result.join('')\n}\n\nexport function millisecs(m) {\n  return m * 60000\n}\n","import React, { PureComponent } from 'react';\nimport { millisecs, getHumanTime } from '../helpers';\n\nexport default class Stats extends PureComponent {\n  render() {\n    // console.log(Object.getPrototypeOf(this).constructor.name, 'rendered')\n    const timeBlock = millisecs(this.props.sessionLength + this.props.breakLength);\n    const fullBlocksLeft = Math.max(0, this.props.blocks.reduce((a, c) => a + c) - 1);\n    let totalTimeLeft = this.props.timeLeft + fullBlocksLeft * timeBlock;\n    if (this.props.status === 'break')\n      totalTimeLeft -= millisecs(this.props.breakLength);\n    return (<div className=\"stats\">\n      <div>{getHumanTime(totalTimeLeft, 'hm')} until complete</div>\n      <div>Finish at {getHumanTime(new Date(this.props.now + totalTimeLeft), 'hm:a')}</div>\n      <hr />\n      <div>{this.props.sessionsCompleted} sessions completed </div>\n      <div>{getHumanTime(this.props.timeElapsed, 'hm')} in total</div>\n    </div>);\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircle as fasCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faCircle as farCircle } from '@fortawesome/free-regular-svg-icons';\nimport { getHumanTime } from '../helpers';\n\nexport default class Timer extends PureComponent {\n  render() {\n    // console.log(Object.getPrototypeOf(this).constructor.name, 'rendered');\n    const lastMinute = this.props.isRunning && this.props.timeLeft < 60000 ? true : false;\n    let label = this.props.status[0].toUpperCase() + this.props.status.slice(1);\n    if (!this.props.isRunning &&\n      (this.props.status === 'session' || this.props.status === 'break')) {\n      label = 'Paused';\n    }\n    const blockDots = this.props.blocks.map((v, i) => {\n      return v ? (<FontAwesomeIcon key={i} icon={fasCircle} />) : (<FontAwesomeIcon key={i} icon={farCircle} />);\n    });\n    return (<div className={'timer' + (lastMinute ? ' red-alert' : '')}>\n      <div className=\"timer-label\" id=\"timer-label\">\n        {label}\n      </div>\n      <div className=\"time-left\" id=\"time-left\">\n        {getHumanTime(this.props.timeLeft, 'ms:')}\n      </div>\n      <div className=\"blocks-display\">{blockDots}</div>\n    </div>);\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faPause, faUndoAlt } from '@fortawesome/free-solid-svg-icons';\n\nexport default class Settings extends PureComponent {\n  render() {\n    // console.log(Object.getPrototypeOf(this).constructor.name, 'rendered');\n    return (<div className=\"controls\">\n      <div className=\"btn\" id=\"playPause\" onClick={this.props.callback}>\n        <FontAwesomeIcon icon={this.props.isRunning ? faPause : faPlay} />\n      </div>\n      <div className=\"btn\" id=\"reset\" onClick={this.props.callback}>\n        <FontAwesomeIcon icon={faUndoAlt} />\n      </div>\n    </div>);\n  }\n}\n","import React from 'react';\n\nexport default class Incrementer extends React.PureComponent {\n  render() {\n    // console.log(Object.getPrototypeOf(this).constructor.name, 'rendered');\n    const idLabel = this.props.label + '-label';\n    const idValue = this.props.label + '-value';\n    const labelText = this.props.label[0].toUpperCase() +\n      this.props.label.slice(1) +\n      (this.props.label !== 'blocks' ? ' Length' : '');\n    return (<div className=\"incrementer\">\n      <div className=\"label\" id={idLabel}>\n        {labelText}\n      </div>\n      <div className=\"updown\">\n        <div className=\"btn up\" id={this.props.label} onClick={e => this.props.callback(1, e)}>\n          +\n          </div>\n        <div className=\"btn down\" id={this.props.label} onClick={e => this.props.callback(-1, e)}>\n          &ndash;\n          </div>\n      </div>\n      <div className=\"number\" id={idValue}>\n        {this.props.value}\n      </div>\n    </div>);\n  }\n}\n","import React from 'react'\nimport bell from './bell.ogg'\nimport deepBell from './deepbell.ogg'\nimport './App.css'\n\nimport { millisecs } from './helpers'\nimport Stats from \"./components/Stats\"\nimport Timer from \"./components/Timer\"\nimport Settings from \"./components/Settings\"\nimport Incrementer from \"./components/Incrementer\"\n\nconst INITIAL_STATE = {\n  sessionLength: 25,\n  breakLength: 5,\n  blocks: [1, 1, 1, 1],\n  status: 'ready',\n  timeLeft: 0,\n  isRunning: false,\n  timeElapsed: 0,\n  sessionsCompleted: 0,\n  now: Date.now(),\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = INITIAL_STATE\n    this.playPauseReset = this.playPauseReset.bind(this)\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tic(), 1000)\n    this.setState({ timeLeft: millisecs(this.state.sessionLength) })\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID)\n  }\n\n  changeSettings = (i, e) => {\n    let { sessionLength, breakLength, timeLeft } = this.state\n    let blocks = [...this.state.blocks]\n    switch (e.currentTarget.id) {\n      case 'session':\n        sessionLength =\n          i > 0 ? Math.min(60, sessionLength + i) : Math.max(1, sessionLength - 1)\n        if (this.state.status !== 'break') timeLeft = millisecs(sessionLength)\n        break\n      case 'break':\n        breakLength =\n          i > 0 ? Math.min(60, breakLength + i) : Math.max(1, breakLength - 1)\n        if (this.state.status === 'break') timeLeft = millisecs(breakLength)\n        break\n      case 'blocks':\n        if (i > 0) {\n          if (blocks.length < 10) blocks.unshift(1)\n        } else {\n          if (blocks.length > 1) blocks.shift()\n        }\n        break\n      default:\n        break\n    }\n    this.setState({ sessionLength, breakLength, blocks, timeLeft })\n  }\n\n  playPauseReset = e => {\n    let { sessionLength, timeLeft, status, isRunning, timeElapsed, sessionsCompleted } = this.state\n    let blocks = [...this.state.blocks]\n    switch (e.currentTarget.id) {\n      case 'playPause':\n        isRunning = !isRunning\n        this.setState({ isRunning })\n        if (status === 'ready' || status === 'series complete') {\n          blocks = blocks.map(v => 1)\n          status = 'session'\n          timeLeft = millisecs(sessionLength)\n          this.setState({ blocks, status, timeLeft })\n        }\n        return\n      case 'reset':\n        if (status === 'ready') {\n          timeElapsed = 0\n          sessionsCompleted = 0\n          this.setState({ timeElapsed, sessionsCompleted })\n        } else {\n          status = 'ready'\n        }\n        blocks = blocks.map(v => 1)\n        timeLeft = millisecs(sessionLength)\n        isRunning = false\n        this.setState({ blocks, status, timeLeft, isRunning })\n        return\n      default:\n        break\n    }\n  }\n  \n  tic() {\n    // console.count('Tic')\n    let {\n      sessionLength,\n      breakLength,\n      blocks,\n      status,\n      timeLeft,\n      isRunning,\n      timeElapsed,\n      sessionsCompleted,\n    } = this.state\n    if (isRunning) {\n      if (timeLeft === 0) {\n        if (status === 'session') {\n          sessionsCompleted += 1\n          if (blocks.reduce((a, c) => a + c) === 1) {\n            blocks[0] = 0\n            isRunning = false\n            status = 'series complete'\n            timeLeft = 0\n            this.bell.currentTime = 0\n            this.bell.play()\n          } else {\n            status = 'break'\n            timeLeft = millisecs(breakLength)\n            this.beep.currentTime = 0\n            this.beep.play()\n          }\n        } else if (status === 'break') {\n          if (blocks[blocks.length - 1]) {\n            blocks[blocks.length - 1] = 0\n          } else {\n            blocks[blocks.indexOf(0) - 1] = 0\n          }\n          status = 'session'\n          timeLeft = millisecs(sessionLength)\n          this.beep.currentTime = 0\n          this.beep.play()\n        }\n      } else {\n        timeLeft -= 1000\n        if (status === 'session') timeElapsed += 1000\n      }\n      this.setState({\n        sessionLength,\n        breakLength,\n        blocks,\n        status,\n        timeLeft,\n        isRunning,\n        timeElapsed,\n        sessionsCompleted,\n        now: Date.now(),\n      })\n      return\n    } else {\n      // keep completion time updated if paused\n      this.setState({ now: Date.now() })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"pomodoro\">\n        <audio\n          id=\"beep\"\n          src={bell}\n          type=\"audio/ogg\"\n          ref={audio => {\n            this.beep = audio\n          }}\n        ></audio>\n        <audio\n          id=\"bell\"\n          src={deepBell}\n          type=\"audio/ogg\"\n          ref={audio => {\n            this.bell = audio\n          }}\n        ></audio>\n        <div className=\"incrementers\">\n          <Incrementer\n            key=\"0\"\n            label=\"session\"\n            value={this.state.sessionLength}\n            callback={this.changeSettings}\n          />\n          <Incrementer\n            key=\"1\"\n            label=\"break\"\n            value={this.state.breakLength}\n            callback={this.changeSettings}\n          />\n          <Incrementer\n            key=\"2\"\n            label=\"blocks\"\n            value={this.state.blocks.length}\n            callback={this.changeSettings}\n          />\n        </div>\n        <Settings isRunning={this.state.isRunning} callback={this.playPauseReset} />\n        <Timer\n          isRunning={this.state.isRunning}\n          status={this.state.status}\n          timeLeft={this.state.timeLeft}\n          blocks={this.state.blocks}\n        />\n        <Stats {...this.state} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"app-wrapper\">\n    <App />\n    <p>created by<br/><a href=\"https://nilueps.net/\">nilueps</a></p>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}